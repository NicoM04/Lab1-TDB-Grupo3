plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.4'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	set('springCloudVersion', "2024.0.1")
	set('tanzuScgExtensionsVersion', "1.0.0")
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa:3.2.4'
	implementation 'org.springframework.boot:spring-boot-starter-web:3.2.4'
	implementation 'org.springframework.boot:spring-boot-starter:3.2.4'

	// Si no necesitas el Gateway ni Tanzu, puedes quitar estas dos
	// Si sí los necesitas, asegúrate que los artefactos estén disponibles
	// implementation 'com.vmware.tanzu.springcloudgateway.extensions:access-control:1.0.0'
	// implementation 'org.springframework.cloud:spring-cloud-starter-gateway:4.1.0'

	implementation 'org.projectlombok:lombok:1.18.30'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.mysql:mysql-connector-j:8.3.0'
	runtimeOnly 'org.postgresql:postgresql:42.7.2'
	annotationProcessor 'org.projectlombok:lombok:1.18.30'
	testImplementation 'org.springframework.boot:spring-boot-starter-test:3.2.4'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}


dependencyManagement {
	imports {
		mavenBom "com.vmware.tanzu.springcloudgateway.extensions:extensions-bom:${tanzuScgExtensionsVersion}"
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

tasks.named('test') {
	useJUnitPlatform()
}
